-- SQL for product_colors table
CREATE TABLE public.product_colors (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  product_id bigint NOT NULL,
  color_name text NOT NULL,
  hex_code text NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT product_colors_pkey PRIMARY KEY (id),
  CONSTRAINT product_colors_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id) ON DELETE CASCADE,
  CONSTRAINT product_colors_hex_code_check CHECK (hex_code ~ '^#[0-9A-Fa-f]{6}$')
);

-- Create index for better performance
CREATE INDEX product_colors_product_id_idx ON public.product_colors(product_id);

-- Example query to fetch products with their available colors
SELECT 
  p.id,
  p.title,
  p.fabric,
  p.original_price,
  p.discount_price,
  p.category,
  p.hero_image_url,
  p.description,
  COALESCE(
    JSON_AGG(
      JSON_BUILD_OBJECT(
        'id', pc.id,
        'color_name', pc.color_name,
        'hex_code', pc.hex_code
      )
    ) FILTER (WHERE pc.id IS NOT NULL),
    '[]'::json
  ) as colors
FROM public.products p
LEFT JOIN public.product_colors pc ON p.id = pc.product_id
WHERE p.id = $1
GROUP BY p.id, p.title, p.fabric, p.original_price, p.discount_price, p.category, p.hero_image_url, p.description;

-- Example JSON structure for orders with selected colors
/*
{
  "items": [
    {
      "product_id": 1,
      "title": "Banarasi Silk Saree",
      "quantity": 1,
      "price": 2999,
      "selected_color": {
        "id": 1,
        "color_name": "Royal Blue",
        "hex_code": "#1e40af"
      }
    },
    {
      "product_id": 2,
      "title": "Kanchi Silk Saree", 
      "quantity": 2,
      "price": 3499,
      "selected_color": {
        "id": 5,
        "color_name": "Emerald Green",
        "hex_code": "#059669"
      }
    }
  ],
  "total_amount": 9997,
  "shipping": 100
}
*/